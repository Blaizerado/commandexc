package de.unknown.api;

import java.util.ArrayList;

public enum Rang implements Comparable<Rang>{
	
	ADMIN(0, "Â§4Admin Â§8â—? Â§4", "Â§6", "Â§4Admin Â§8â—? Â§4"),
	HEADDEVELOPER(10, "Â§bHead-Developer Â§8â—? Â§b", "Â§6", "Â§bHead Â§8â—? Â§b"),
	HEADMODERATOR(20, "Â§cHead-Moderator Â§8â—? Â§c", "Â§6", "Â§cHead Â§8â—? Â§c"),
	HEADBUILDER(30, "Â§eHead-Architekt Â§8â—? Â§e", "Â§6", "Â§eHead Â§8â—? Â§e"),
	DEVELOPER(11, "Â§bDeveloper Â§8â—? Â§b", "Â§r", "Â§bDev Â§8â—? Â§b"),
	MODERATOR(21, "Â§cModerator Â§8â—? Â§c", "Â§r", "Â§cMod Â§8â—? Â§c"),
	SUPPORTER(22, "Â§9Supporter Â§8â—? Â§9", "Â§r", "Â§9Sup Â§8â—? Â§9"),
	BUILDER(31, "Â§eArchitekt Â§8â—? Â§e", "Â§r", "Â§eArc Â§8â—? Â§e"),
	YOUTUBER(44, "Â§5YouTuber Â§8â—? Â§5", "Â§r", "Â§5YT Â§8â—? Â§5"),
	PREMIUM(55, "Â§6", "Â§7", "Â§6"),
	DEFAULT(66, "Â§7", "Â§7", "Â§7");
	
	public final static Rang[] ADMINISTRATION = new Rang[] {ADMIN, HEADDEVELOPER, HEADMODERATOR, HEADBUILDER};
	public final static Rang[] DEVELOPING = new Rang[] {ADMIN, HEADDEVELOPER, HEADMODERATOR, HEADBUILDER, DEVELOPER};
	public final static Rang[] MODERATION = new Rang[] {ADMIN, HEADDEVELOPER, HEADMODERATOR, HEADBUILDER, DEVELOPER, MODERATOR};
	public final static Rang[] TEAM = new Rang[] {ADMIN, HEADDEVELOPER, HEADMODERATOR, HEADBUILDER, DEVELOPER, MODERATOR, SUPPORTER, BUILDER};
	public final static Rang[] YOUTUBE = new Rang[] {ADMIN, HEADDEVELOPER, HEADMODERATOR, HEADBUILDER, DEVELOPER, MODERATOR, SUPPORTER, BUILDER, YOUTUBER};
	
	private final int level;
	private String prefix, chatColor, tab;
	
	Rang(int level, String prefix, String chatcolor, String tab) {
		this.level = level;
		this.setPrefix(prefix);
		this.setChatColor(chatcolor);
		this.setTab(tab);
	}
	
	public boolean isDeveloping() {
		for(Rang r : DEVELOPING) {
			if(r == this) return true;
		}
		return false;
	}
	
	public static Rang[] getRangs(Rang rang) {
		ArrayList<Rang> rangs = new ArrayList<>();
		for(Rang r : values()) {
			if(r.level <= rang.level) rangs.add(r);
		}
		return rangs.toArray(new Rang[rangs.size()]);
	}

	public int getLevel() {
		return level;
	}

	public String getPrefix() {
		return prefix;
	}

	public void setPrefix(String prefix) {
		this.prefix = prefix;
	}

	public String getChatColor() {
		return chatColor;
	}

	public void setChatColor(String chatColor) {
		this.chatColor = chatColor;
	}

	public String getTab() {
		return tab;
	}

	public void setTab(String tab) {
		this.tab = tab;
	}
	
	public boolean isAdministration() {
		for(Rang r : ADMINISTRATION) {
			if(r == this) return true;
		}
		return false;
	}
	
	public boolean isModeration() {
		for(Rang r : MODERATION) {
			if(r == this) return true;
		}
		return false;
	}
	
	public boolean isTeam() {
		for(Rang r : TEAM) {
			if(r == this) return true;
		}
		return false;
	}
	
	public boolean isPremium() {
		return this != DEFAULT;
	}
	
	@Override
	public String toString() {
		return name().toLowerCase();
	}
}
